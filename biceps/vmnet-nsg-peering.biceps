param routeTables_RT_Corevms_name string = 'RT_Corevms'
param virtualNetworks_CoreServiceVM_name string = 'CoreServiceVM'
param virtualNetworks_ManufacturingVM_name string = 'ManufacturingVM'
param networkSecurityGroups_CoreServiceVM_nsg_name string = 'CoreServiceVM-nsg'
param networkSecurityGroups_ManufacturingVM_nsg_name string = 'ManufacturingVM-nsg'

resource networkSecurityGroups_CoreServiceVM_nsg_name_resource 'Microsoft.Network/networkSecurityGroups@2024-05-01' = {
  name: networkSecurityGroups_CoreServiceVM_nsg_name
  location: 'eastus'
  properties: {
    securityRules: [
      {
        name: 'RDP'
        id: networkSecurityGroups_CoreServiceVM_nsg_name_RDP.id
        type: 'Microsoft.Network/networkSecurityGroups/securityRules'
        properties: {
          protocol: 'TCP'
          sourcePortRange: '*'
          destinationPortRange: '3389'
          sourceAddressPrefix: '*'
          destinationAddressPrefix: '*'
          access: 'Allow'
          priority: 300
          direction: 'Inbound'
          sourcePortRanges: []
          destinationPortRanges: []
          sourceAddressPrefixes: []
          destinationAddressPrefixes: []
        }
      }
    ]
  }
}

resource networkSecurityGroups_ManufacturingVM_nsg_name_resource 'Microsoft.Network/networkSecurityGroups@2024-05-01' = {
  name: networkSecurityGroups_ManufacturingVM_nsg_name
  location: 'eastus'
  properties: {
    securityRules: [
      {
        name: 'RDP'
        id: networkSecurityGroups_ManufacturingVM_nsg_name_RDP.id
        type: 'Microsoft.Network/networkSecurityGroups/securityRules'
        properties: {
          protocol: 'TCP'
          sourcePortRange: '*'
          destinationPortRange: '3389'
          sourceAddressPrefix: '*'
          destinationAddressPrefix: '*'
          access: 'Allow'
          priority: 300
          direction: 'Inbound'
          sourcePortRanges: []
          destinationPortRanges: []
          sourceAddressPrefixes: []
          destinationAddressPrefixes: []
        }
      }
    ]
  }
}

resource routeTables_RT_Corevms_name_resource 'Microsoft.Network/routeTables@2024-05-01' = {
  name: routeTables_RT_Corevms_name
  location: 'eastus'
  properties: {
    disableBgpRoutePropagation: true
    routes: [
      {
        name: 'Perimetrorota'
        id: routeTables_RT_Corevms_name_Perimetrorota.id
        properties: {
          addressPrefix: '10.0.0.0/16'
          nextHopType: 'VirtualAppliance'
          nextHopIpAddress: '10.0.1.7'
        }
        type: 'Microsoft.Network/routeTables/routes'
      }
    ]
  }
}

resource networkSecurityGroups_CoreServiceVM_nsg_name_RDP 'Microsoft.Network/networkSecurityGroups/securityRules@2024-05-01' = {
  name: '${networkSecurityGroups_CoreServiceVM_nsg_name}/RDP'
  properties: {
    protocol: 'TCP'
    sourcePortRange: '*'
    destinationPortRange: '3389'
    sourceAddressPrefix: '*'
    destinationAddressPrefix: '*'
    access: 'Allow'
    priority: 300
    direction: 'Inbound'
    sourcePortRanges: []
    destinationPortRanges: []
    sourceAddressPrefixes: []
    destinationAddressPrefixes: []
  }
  dependsOn: [
    networkSecurityGroups_CoreServiceVM_nsg_name_resource
  ]
}

resource networkSecurityGroups_ManufacturingVM_nsg_name_RDP 'Microsoft.Network/networkSecurityGroups/securityRules@2024-05-01' = {
  name: '${networkSecurityGroups_ManufacturingVM_nsg_name}/RDP'
  properties: {
    protocol: 'TCP'
    sourcePortRange: '*'
    destinationPortRange: '3389'
    sourceAddressPrefix: '*'
    destinationAddressPrefix: '*'
    access: 'Allow'
    priority: 300
    direction: 'Inbound'
    sourcePortRanges: []
    destinationPortRanges: []
    sourceAddressPrefixes: []
    destinationAddressPrefixes: []
  }
  dependsOn: [
    networkSecurityGroups_ManufacturingVM_nsg_name_resource
  ]
}

resource routeTables_RT_Corevms_name_Perimetrorota 'Microsoft.Network/routeTables/routes@2024-05-01' = {
  name: '${routeTables_RT_Corevms_name}/Perimetrorota'
  properties: {
    addressPrefix: '10.0.0.0/16'
    nextHopType: 'VirtualAppliance'
    nextHopIpAddress: '10.0.1.7'
  }
  dependsOn: [
    routeTables_RT_Corevms_name_resource
  ]
}

resource virtualNetworks_ManufacturingVM_name_resource 'Microsoft.Network/virtualNetworks@2024-05-01' = {
  name: virtualNetworks_ManufacturingVM_name
  location: 'eastus'
  properties: {
    addressSpace: {
      addressPrefixes: [
        '172.16.0.0/16'
      ]
    }
    privateEndpointVNetPolicies: 'Disabled'
    subnets: [
      {
        name: 'Manufacturing'
        id: virtualNetworks_ManufacturingVM_name_Manufacturing.id
        properties: {
          addressPrefix: '172.16.0.0/24'
          delegations: []
          privateEndpointNetworkPolicies: 'Disabled'
          privateLinkServiceNetworkPolicies: 'Enabled'
        }
        type: 'Microsoft.Network/virtualNetworks/subnets'
      }
    ]
    virtualNetworkPeerings: [
      {
        name: 'Core_to_manufactori'
        id: virtualNetworks_ManufacturingVM_name_Core_to_manufactori.id
        properties: {
          peeringState: 'Connected'
          peeringSyncLevel: 'FullyInSync'
          remoteVirtualNetwork: {
            id: virtualNetworks_CoreServiceVM_name_resource.id
          }
          allowVirtualNetworkAccess: true
          allowForwardedTraffic: true
          allowGatewayTransit: false
          useRemoteGateways: false
          doNotVerifyRemoteGateways: false
          peerCompleteVnets: true
          remoteAddressSpace: {
            addressPrefixes: [
              '10.0.0.0/16'
            ]
          }
          remoteVirtualNetworkAddressSpace: {
            addressPrefixes: [
              '10.0.0.0/16'
            ]
          }
        }
        type: 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings'
      }
    ]
    enableDdosProtection: false
  }
}

resource virtualNetworks_ManufacturingVM_name_Manufacturing 'Microsoft.Network/virtualNetworks/subnets@2024-05-01' = {
  name: '${virtualNetworks_ManufacturingVM_name}/Manufacturing'
  properties: {
    addressPrefix: '172.16.0.0/24'
    delegations: []
    privateEndpointNetworkPolicies: 'Disabled'
    privateLinkServiceNetworkPolicies: 'Enabled'
  }
  dependsOn: [
    virtualNetworks_ManufacturingVM_name_resource
  ]
}

resource virtualNetworks_CoreServiceVM_name_Perimetro 'Microsoft.Network/virtualNetworks/subnets@2024-05-01' = {
  name: '${virtualNetworks_CoreServiceVM_name}/Perimetro'
  properties: {
    addressPrefix: '10.0.1.0/24'
    delegations: []
    privateEndpointNetworkPolicies: 'Disabled'
    privateLinkServiceNetworkPolicies: 'Enabled'
  }
  dependsOn: [
    virtualNetworks_CoreServiceVM_name_resource
  ]
}

resource virtualNetworks_CoreServiceVM_name_resource 'Microsoft.Network/virtualNetworks@2024-05-01' = {
  name: virtualNetworks_CoreServiceVM_name
  location: 'eastus'
  properties: {
    addressSpace: {
      addressPrefixes: [
        '10.0.0.0/16'
      ]
    }
    privateEndpointVNetPolicies: 'Disabled'
    subnets: [
      {
        name: 'Perimetro'
        id: virtualNetworks_CoreServiceVM_name_Perimetro.id
        properties: {
          addressPrefix: '10.0.1.0/24'
          delegations: []
          privateEndpointNetworkPolicies: 'Disabled'
          privateLinkServiceNetworkPolicies: 'Enabled'
        }
        type: 'Microsoft.Network/virtualNetworks/subnets'
      }
      {
        name: 'Core'
        id: virtualNetworks_CoreServiceVM_name_Core.id
        properties: {
          addressPrefix: '10.0.0.0/24'
          routeTable: {
            id: routeTables_RT_Corevms_name_resource.id
          }
          delegations: []
          privateEndpointNetworkPolicies: 'Disabled'
          privateLinkServiceNetworkPolicies: 'Enabled'
        }
        type: 'Microsoft.Network/virtualNetworks/subnets'
      }
    ]
    virtualNetworkPeerings: [
      {
        name: 'manufactori_to_core'
        id: virtualNetworks_CoreServiceVM_name_manufactori_to_core.id
        properties: {
          peeringState: 'Connected'
          peeringSyncLevel: 'FullyInSync'
          remoteVirtualNetwork: {
            id: virtualNetworks_ManufacturingVM_name_resource.id
          }
          allowVirtualNetworkAccess: true
          allowForwardedTraffic: true
          allowGatewayTransit: false
          useRemoteGateways: false
          doNotVerifyRemoteGateways: false
          peerCompleteVnets: true
          remoteAddressSpace: {
            addressPrefixes: [
              '172.16.0.0/16'
            ]
          }
          remoteVirtualNetworkAddressSpace: {
            addressPrefixes: [
              '172.16.0.0/16'
            ]
          }
        }
        type: 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings'
      }
    ]
    enableDdosProtection: false
  }
}

resource virtualNetworks_CoreServiceVM_name_Core 'Microsoft.Network/virtualNetworks/subnets@2024-05-01' = {
  name: '${virtualNetworks_CoreServiceVM_name}/Core'
  properties: {
    addressPrefix: '10.0.0.0/24'
    routeTable: {
      id: routeTables_RT_Corevms_name_resource.id
    }
    delegations: []
    privateEndpointNetworkPolicies: 'Disabled'
    privateLinkServiceNetworkPolicies: 'Enabled'
  }
  dependsOn: [
    virtualNetworks_CoreServiceVM_name_resource
  ]
}

resource virtualNetworks_ManufacturingVM_name_Core_to_manufactori 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings@2024-05-01' = {
  name: '${virtualNetworks_ManufacturingVM_name}/Core_to_manufactori'
  properties: {
    peeringState: 'Connected'
    peeringSyncLevel: 'FullyInSync'
    remoteVirtualNetwork: {
      id: virtualNetworks_CoreServiceVM_name_resource.id
    }
    allowVirtualNetworkAccess: true
    allowForwardedTraffic: true
    allowGatewayTransit: false
    useRemoteGateways: false
    doNotVerifyRemoteGateways: false
    peerCompleteVnets: true
    remoteAddressSpace: {
      addressPrefixes: [
        '10.0.0.0/16'
      ]
    }
    remoteVirtualNetworkAddressSpace: {
      addressPrefixes: [
        '10.0.0.0/16'
      ]
    }
  }
  dependsOn: [
    virtualNetworks_ManufacturingVM_name_resource
  ]
}

resource virtualNetworks_CoreServiceVM_name_manufactori_to_core 'Microsoft.Network/virtualNetworks/virtualNetworkPeerings@2024-05-01' = {
  name: '${virtualNetworks_CoreServiceVM_name}/manufactori_to_core'
  properties: {
    peeringState: 'Connected'
    peeringSyncLevel: 'FullyInSync'
    remoteVirtualNetwork: {
      id: virtualNetworks_ManufacturingVM_name_resource.id
    }
    allowVirtualNetworkAccess: true
    allowForwardedTraffic: true
    allowGatewayTransit: false
    useRemoteGateways: false
    doNotVerifyRemoteGateways: false
    peerCompleteVnets: true
    remoteAddressSpace: {
      addressPrefixes: [
        '172.16.0.0/16'
      ]
    }
    remoteVirtualNetworkAddressSpace: {
      addressPrefixes: [
        '172.16.0.0/16'
      ]
    }
  }
  dependsOn: [
    virtualNetworks_CoreServiceVM_name_resource
  ]
}
